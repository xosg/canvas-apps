define(["exports"],function(t){"use strict";function i(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var e=function(){function t(t,i){for(var e=0;e<i.length;e++){var h=i[e];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(t,h.key,h)}}return function(i,e,h){return e&&t(i.prototype,e),h&&t(i,h),i}}(),h={src:"",width:document.body.offsetWidth,height:document.body.offsetHeight,imgSize:void 0,filter:function(t,i,e,h){return!0},x:void 0,y:void 0,r:.5,cols:150,rows:150,mouseRange:60,disperse:5,recovery:.95},s=function(){function t(e,s){i(this,t),Object.assign(this,h,s),this.canvas=document.getElementById(e),this.cxt=this.canvas.getContext("2d"),this.particles=[],this.isAnimate=!0,this.init()}return e(t,[{key:"init",value:function(){this.setSize(),this.setImage(this.src)}},{key:"destory",value:function(){this.cxt.clearRect(0,0,this.width,this.height),this.particles.length=0,this.stop()}},{key:"bindEvent",value:function(){this.canvas.addEventListener("mousemove",this.getMousePos.bind(this))}},{key:"getMousePos",value:function(t){this.mx=t.clientX-this.bounds.left,this.my=t.clientY-this.bounds.top}},{key:"setSize",value:function(){this.canvas.width=this.width,this.canvas.height=this.height}},{key:"setImage",value:function(t){var i=this;this.img=new Image,this.img.onload=function(){i.imgSize?(i.img_width=i.imgSize[0],i.img_height=i.imgSize[1],i.x=i.x||(i.width-i.img_width)/2,i.y=i.y||(i.height-i.img_height)/2,i.cxt.drawImage(i.img,i.x,i.y,i.img_width,i.img_height)):(i.img_width=i.img.width,i.img_height=i.img.height,i.x=i.x||(i.width-i.img_width)/2,i.y=i.y||(i.height-i.img_height)/2,i.cxt.drawImage(i.img,i.x,i.y)),i.getParticle(),i.bounds=i.canvas.getBoundingClientRect(),i.bindEvent()},this.img.src=t}},{key:"getParticle",value:function(){for(var t=this.getImageData(),i=parseInt(this.img_width/this.cols),e=parseInt(this.img_height/this.rows),h=0,s=1;s<=this.cols;s++)for(var n=1;n<=this.rows;n++)if(h=n*e*this.img_width+s*i,t[h]&&this.filter&&this.filter.apply(this,t[h])){var a=this.x+s*i+(Math.random()-.5)*this.disperse,o=this.y+n*e+(Math.random()-.5)*this.disperse,r={x:a,y:o,ox:a,oy:o,vx:0,vy:0,color:t[h].join(",")};this.particles.push(r)}this.start()}},{key:"getImageData",value:function(){var t=this.cxt.getImageData(this.x,this.y,this.img_width,this.img_height),i=t.data,e=t.data.length,h=[];t.width!==this.img_width&&(this.img_width=t.width),t.height!==this.img_height&&(this.img_height=t.height);for(var s=0;s<e/4;s++)h.push([i[4*s],i[4*s+1],i[4*s+2],i[4*s+3]]);return h}},{key:"start",value:function(){var t=this;this.isAnimate=!0;var i=function e(){return!!t.isAnimate&&(t.render(),t.update(),void requestAnimationFrame(e))};requestAnimationFrame(i)}},{key:"stop",value:function(){this.isAnimate=!1}},{key:"render",value:function(){var t=this;this.cxt.clearRect(0,0,this.width,this.height),Array.from(this.particles,function(i){t.cxt.fillStyle="rgba("+i.color+")",t.cxt.beginPath(),t.cxt.arc(i.x,i.y,t.r,0,2*Math.PI,!0),t.cxt.closePath(),t.cxt.fill()})}},{key:"update",value:function(){var t=this,i=Math.pow(this.mouseRange,2),e=null,h=void 0,s=void 0,n=void 0,a=void 0,o=void 0,r=void 0;Array.from(this.particles,function(c){e=c,h=t.mx-e.x,s=t.my-e.y,n=h*h+s*s,r=Math.sqrt(n),o=-i/n,r<i&&(a=Math.atan2(s,h),e.vx+=o*Math.cos(a),e.vy+=o*Math.sin(a)),e.vx*=t.recovery,e.vy*=t.recovery,e.x+=e.vx+.25*(e.ox-e.x),e.y+=e.vy+.25*(e.oy-e.y)})}}]),t}();t["default"]=s});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
